{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst refs = {\n  btnTimer: document.querySelector('[data-start]'),\n  timerDays: document.querySelector('[data-days]'),\n  timerHours: document.querySelector('[data-hours]'),\n  timerMinutes: document.querySelector('[data-minutes]'),\n  timerSeconds: document.querySelector('[data-seconds]'),\n};\n\nrefs.btnTimer.disabled = true;\nlet timerId = null;\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n\n  onClose(selectedDates) {\n    const currentDate = new Date();\n\n    if (selectedDates[0] - currentDate > 0) {\n      refs.btnTimer.disabled = false;\n    } else {\n      refs.btnTimer.disabled = true;\n      iziToast.error({\n        title: 'Error',\n        message: 'Please choose a date in the future',\n      });\n    }\n  },\n};\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nfunction addLeadingZero(value) {\n  return String(value).padStart(2, 0);\n}\n\nfunction onTimerStart() {\n  const selectedDate = fp.selectedDates[0];\n\n  timerId = setInterval(() => {\n    const startTime = new Date();\n    const delta = selectedDate - startTime;\n    refs.btnTimer.disabled = true;\n\n    if (delta < 0) {\n      clearInterval(timerId);\n      return;\n    }\n    updateTimerFace(convertMs(delta));\n  }, 1_000);\n}\n\nfunction updateTimerFace({ days, hours, minutes, seconds }) {\n  refs.timerDays.textContent = addLeadingZero(days);\n  refs.timerHours.textContent = addLeadingZero(hours);\n  refs.timerMinutes.textContent = addLeadingZero(minutes);\n  refs.timerSeconds.textContent = addLeadingZero(seconds);\n}\n\nconst fp = flatpickr('#datetime-picker', options);\n\nrefs.btnTimer.addEventListener('click', onTimerStart);\n"],"names":["refs","timerId","options","selectedDates","currentDate","iziToast","convertMs","ms","days","hours","minutes","seconds","addLeadingZero","value","onTimerStart","selectedDate","fp","delta","updateTimerFace","flatpickr"],"mappings":"2FAKA,MAAMA,EAAO,CACX,SAAU,SAAS,cAAc,cAAc,EAC/C,UAAW,SAAS,cAAc,aAAa,EAC/C,WAAY,SAAS,cAAc,cAAc,EACjD,aAAc,SAAS,cAAc,gBAAgB,EACrD,aAAc,SAAS,cAAc,gBAAgB,CACvD,EAEAA,EAAK,SAAS,SAAW,GACzB,IAAIC,EAAU,KAEd,MAAMC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EAEjB,QAAQC,EAAe,CACrB,MAAMC,EAAc,IAAI,KAEpBD,EAAc,CAAC,EAAIC,EAAc,EACnCJ,EAAK,SAAS,SAAW,IAEzBA,EAAK,SAAS,SAAW,GACzBK,EAAS,MAAM,CACb,MAAO,QACP,QAAS,oCACjB,CAAO,EAEJ,CACH,EAEA,SAASC,EAAUC,EAAI,CAMrB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAC,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CACxC,CAEA,SAASC,EAAeC,EAAO,CAC7B,OAAO,OAAOA,CAAK,EAAE,SAAS,EAAG,CAAC,CACpC,CAEA,SAASC,GAAe,CACtB,MAAMC,EAAeC,EAAG,cAAc,CAAC,EAEvCf,EAAU,YAAY,IAAM,CAE1B,MAAMgB,EAAQF,EADI,IAAI,KAItB,GAFAf,EAAK,SAAS,SAAW,GAErBiB,EAAQ,EAAG,CACb,cAAchB,CAAO,EACrB,MACD,CACDiB,EAAgBZ,EAAUW,CAAK,CAAC,CACjC,EAAE,GAAK,CACV,CAEA,SAASC,EAAgB,CAAE,KAAAV,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAI,CAC1DX,EAAK,UAAU,YAAcY,EAAeJ,CAAI,EAChDR,EAAK,WAAW,YAAcY,EAAeH,CAAK,EAClDT,EAAK,aAAa,YAAcY,EAAeF,CAAO,EACtDV,EAAK,aAAa,YAAcY,EAAeD,CAAO,CACxD,CAEA,MAAMK,EAAKG,EAAU,mBAAoBjB,CAAO,EAEhDF,EAAK,SAAS,iBAAiB,QAASc,CAAY"}